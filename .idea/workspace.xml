<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6ab5b2a7-885e-4787-9f6c-a023583c8289" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/example/HttpRequest/HttpRequestServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/example/HttpRequest/HttpRequestServiceTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/org/example/Services/HttpRequestService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/example/Services/HttpRequestService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/org/example/HttpRequest/HttpRequestServiceTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/org/example/HttpRequest/HttpRequestServiceTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/org/example/HttpRequest/mocks/MockHttpURLConnection.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/org/example/HttpRequest/mocks/MockHttpURLConnection.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2XRlmpXDnD6gRDRZxXIVlz3spEs" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "dart.analysis.tool.window.visible": "false",
    "extract.method.default.visibility": "private",
    "git-widget-placeholder": "Simon__tests",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "project.structure.last.edited": "SDKs",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.editor",
    "show.migrate.to.gradle.popup": "false",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.example.HttpRequest.mocks" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.HttpRequestServiceTest">
    <configuration name="HttpRequestServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CrudUI" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.HttpRequest.mocks.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.HttpRequest" />
      <option name="MAIN_CLASS_NAME" value="org.example.HttpRequest.HttpRequestServiceTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpRequestServiceTest.whenPerformingDeleteRequestWithMalformedURL_thenExceptionIsThrown" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CrudUI" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.HttpRequest.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.HttpRequest" />
      <option name="MAIN_CLASS_NAME" value="org.example.HttpRequest.HttpRequestServiceTest" />
      <option name="METHOD_NAME" value="whenPerformingDeleteRequestWithMalformedURL_thenExceptionIsThrown" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpRequestServiceTest.whenPerformingGetRequestWithIncorrectURLInput_thenExceptionIsThrown" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CrudUI" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.HttpRequest.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.HttpRequest" />
      <option name="MAIN_CLASS_NAME" value="org.example.HttpRequest.HttpRequestServiceTest" />
      <option name="METHOD_NAME" value="whenPerformingGetRequestWithIncorrectURLInput_thenExceptionIsThrown" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpRequestServiceTest.whenPerformingPutRequestWithInvalidInputJSON_thenExceptionIsThrown" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CrudUI" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.HttpRequest.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.HttpRequest" />
      <option name="MAIN_CLASS_NAME" value="org.example.HttpRequest.HttpRequestServiceTest" />
      <option name="METHOD_NAME" value="whenPerformingPutRequestWithInvalidInputJSON_thenExceptionIsThrown" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpRequestServiceTest.whenPerformingPutRequestWithMalformedURL_thenExceptionIsThrown" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="CrudUI" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.HttpRequest.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.HttpRequest" />
      <option name="MAIN_CLASS_NAME" value="org.example.HttpRequest.HttpRequestServiceTest" />
      <option name="METHOD_NAME" value="whenPerformingPutRequestWithMalformedURL_thenExceptionIsThrown" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingGetRequestWithIncorrectURLInput_thenExceptionIsThrown" />
      <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingPutRequestWithInvalidInputJSON_thenExceptionIsThrown" />
      <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingPutRequestWithMalformedURL_thenExceptionIsThrown" />
      <item itemvalue="JUnit.HttpRequestServiceTest" />
      <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingDeleteRequestWithMalformedURL_thenExceptionIsThrown" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.HttpRequestServiceTest" />
        <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingPutRequestWithInvalidInputJSON_thenExceptionIsThrown" />
        <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingPutRequestWithMalformedURL_thenExceptionIsThrown" />
        <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingGetRequestWithIncorrectURLInput_thenExceptionIsThrown" />
        <item itemvalue="JUnit.HttpRequestServiceTest.whenPerformingDeleteRequestWithMalformedURL_thenExceptionIsThrown" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6ab5b2a7-885e-4787-9f6c-a023583c8289" name="Changes" comment="" />
      <created>1698599936265</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698599936265</updated>
      <workItem from="1698761221771" duration="6661000" />
      <workItem from="1699025500172" duration="539000" />
      <workItem from="1699027400552" duration="3570000" />
    </task>
    <task id="LOCAL-00001" summary="Fixed tests regarding mocking get method response">
      <option name="closed" value="true" />
      <created>1699025924452</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1699025924452</updated>
    </task>
    <task id="LOCAL-00002" summary="removed todo">
      <option name="closed" value="true" />
      <created>1699026005605</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1699026005605</updated>
    </task>
    <task id="LOCAL-00003" summary="Added boundary cases">
      <option name="closed" value="true" />
      <created>1699030461915</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1699030461915</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fixed tests regarding mocking get method response" />
    <MESSAGE value="removed todo" />
    <MESSAGE value="Added boundary cases" />
    <option name="LAST_COMMIT_MESSAGE" value="Added boundary cases" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Services/NotesService.java</url>
          <line>55</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/org/example/HttpRequest/HttpRequestServiceTest.java</url>
          <line>282</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>